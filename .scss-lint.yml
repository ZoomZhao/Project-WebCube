
# https://github.com/brigade/scss-lint#configuration
scss_files: "**/*.scss"
exclude: "node_modules/**/*"

# https://github.com/brigade/scss-lint#custom-linters
plugin_directories: ['.scss-linters']
plugin_gems: []

# https://github.com/brigade/scss-lint#severities
severity: warning

# https://github.com/brigade/scss-lint/blob/master/lib/scss_lint/linter/README.md
linters:
  # Reports when you use improper spacing around ! (the "bang") in !default, !global, !important, and !optional flags.
  BangFormat:
    enabled: true
    space_before_bang: true
    space_after_bang: false
  # Reports when a BEM selector contains more elements than a configurable maximum number.
  BemDepth:
    enabled: false
    max_elements: 1
  # Prefer the terser border: 0 over border: none.
  BorderZero:
    enabled: false
    convention: zero # or `none`
  # Reports when you define a rule set using a selector with chained classes (a.k.a. adjoining classes).
  ChainedClasses:
    enabled: false
  # Prefer hexadecimal color codes over color keywords.
  ColorKeyword:
    enabled: true
  # Prefer color literals (keywords or hexadecimal codes) to be used only in variable declarations. They should be referred to via variables everywhere else.
  ColorVariable:
    enabled: true
  # Prefer // comments over /* ... */.
  Comment:
    enabled: true
    style: silent
  # https://github.com/brigade/scss-lint/blob/master/lib/scss_lint/linter/README.md#compass-linters
  # Reports @debug statements (which you probably left behind accidentally).
  DebugStatement:
    enabled: true
  # Rule sets should be ordered as follows: @extend declarations, @include declarations without inner @content, properties, @include declarations with inner @content, then nested rule sets.
  DeclarationOrder:
    enabled: true
  # scss-lint:disable control comments should be preceded by a comment explaining why these linters are being disabled for this file.
  DisableLinterReason:
    enabled: false
  # Reports when you define the same property twice in a single rule set.
  DuplicateProperty:
    enabled: true
  # Place @else statements on the same line as the preceding curly brace.
  ElsePlacement:
    enabled: true
    style: same_line # or 'new_line'
  # Separate rule, function, and mixin declarations with empty lines.
  EmptyLineBetweenBlocks:
    enabled: true
    ignore_single_line_blocks: true
  # Reports when you have an empty rule set.
  EmptyRule:
    enabled: true
  # Reports when you have an @extend directive.
  ExtendDirective:
    enabled: false
  # Files should always have a final newline. This results in better diffs when adding lines to the file, since SCM systems such as git won't think that you touched the last line.
  FinalNewline:
    enabled: true
    present: true
  # You can specify whether you prefer shorthand or long-form hexadecimal colors by setting the style option to short or long, respectively.
  HexLength:
    enabled: true
    style: long # or short
  # Checks if hexadecimal colors are written in lowercase. You can specify which case with the style option.
  HexNotation:
    enabled: true
    style: uppercase
  # Ensure hexadecimal colors are valid (either three or six digits).
  HexValidation:
    enabled: true
  # Avoid using ID selectors.
  # https://2002-2012.mattwilcox.net/archive/entry/id/1054/
  # http://oli.jp/2011/ids/
  IdSelector:
    enabled: true
  # Avoid using !important in properties. It is usually indicative of a misunderstanding of CSS specificity and can lead to brittle code.
  ImportantRule:
    enabled: true
  # The basenames of @imported SCSS partials should not begin with an underscore and should not include the filename extension.
  ImportPath:
    enabled: true
    leading_underscore: false
    filename_extension: false
  # Use two spaces per indentation level.
  Indentation:
    enabled: true
    allow_non_nested_indentation: false
    character: space # or 'tab'
    width: 2
  # Don't write leading zeros for numeric values with a decimal point.
  LeadingZero:
    enabled: true
    style: include_zero # or exclude_zero
  # Reports when you define the same selector twice in a single sheet.
  MergeableSelector:
    enabled: true
    force_nesting: true
  # Functions, mixins, variables, and placeholders should be declared with all lowercase letters and hyphens instead of underscores.
  NameFormat:
    enabled: true
    allow_leading_underscore: true
    convention: hyphenated_lowercase # or 'camel_case', or 'snake_case', or a regex pattern
  # Avoid nesting selectors too deeply.
  # https://smacss.com/book/applicability
  # Use SelectorDepth (3 + 3 = 6)
  NestingDepth:
    enabled: true
    max_depth: 3
    ignore_parent_selectors: false
  # Always use placeholder selectors in @extend.
  # http://8gramgorilla.com/mastering-sass-extends-and-placeholders/
  PlaceholderInExtend:
    enabled: true
  # Limit the number of properties in a rule set.
  PropertyCount:
    enabled: false
    include_nested: false
    max_properties: 10
  # Sort properties in a strict order. By default, will require properties be sorted in alphabetical order, as it's brain dead simple
  # https://github.com/brigade/scss-lint/tree/master/data/property-sort-orders
  PropertySortOrder:
    enabled: true
    ignore_unspecified: false
    min_properties: 2
    separate_groups: false
    order:
    - display
    - position
    - top
    - right
    - bottom
    - left
    - float
    - clear
    - overflow
    - z-index
    -
    - flex
    - flex-basis
    - flex-direction
    - flex-flow
    - flex-grow
    - flex-shrink
    - flex-wrap
    - align-content
    - align-items
    - align-self
    - justify-content
    - order
    -
    - width
    - min-width
    - max-width
    - height
    - min-height
    - max-height
    - margin
    - margin-top
    - margin-right
    - margin-bottom
    - margin-left
    - padding
    - padding-top
    - padding-right
    - padding-bottom
    - padding-left
    -
    - border
    - border-top
    - border-right
    - border-bottom
    - border-left
    - border-width
    - border-top-width
    - border-right-width
    - border-bottom-width
    - border-left-width
    - border-style
    - border-top-style
    - border-right-style
    - border-bottom-style
    - border-left-style
    - border-radius
    - border-top-left-radius
    - border-top-right-radius
    - border-bottom-left-radius
    - border-bottom-right-radius
    - border-color
    - border-top-color
    - border-right-color
    - border-bottom-color
    - border-left-color
    - border-collapse
    - border-spacing
    - box-shadow
    - outline
    - outline-color
    - outline-offset
    - outline-style
    - outline-width
    - background
    - background-attachment
    - background-color
    - background-image
    - background-repeat
    - background-position
    - background-size
    - color
    - font
    - font-family
    - font-size
    - font-smoothing
    - font-style
    - font-variant
    - font-weight
    - letter-spacing
    - line-height
    - list-style
    - text-align
    - text-decoration
    - text-indent
    - text-overflow
    - text-rendering
    - text-shadow
    - text-transform
    - text-wrap
    - white-space
    - word-spacing
    -
    - columns
    - column-gap
    - column-fill
    - column-rule
    - column-span
    - column-count
    - column-width
    -
    - table-layout
    - vertical-align
    - empty-cells
    - caption-side
    -
    - opacity
    - visibility
    - transform
    - transform-box
    - transform-origin
    - transform-style
    - transition
    - transition-delay
    - transition-duration
    - transition-property
    - transition-timing-function
    -
    - content
    - quotes
    - cursor
    - speak
  # Reports when you use an unknown or disabled CSS property (ignoring vendor-prefixed properties).
  PropertySpelling:
    enabled: true
    extra_properties: []
    disabled_properties: []
  # Configure which units are allowed for property values.
  PropertyUnits:
    enabled: true
    global: [
      'ch', 'em', 'ex', 'rem',                 # Font-relative lengths
      'cm', 'in', 'mm', 'pc', 'pt', 'px', 'q', # Absolute lengths
      'vh', 'vw', 'vmin', 'vmax',              # Viewport-percentage lengths
      'deg', 'grad', 'rad', 'turn',            # Angle
      'ms', 's',                               # Duration
      'Hz', 'kHz',                             # Frequency
      'dpi', 'dpcm', 'dppx',                   # Resolution
      '%'                                      # Other
      ]
    properties: {}
  # Pseudo-elements, like ::before, and ::first-letter, should be declared with two colons. Pseudo-classes, like :hover and :first-child, should be declared with one colon.
  PseudoElement:
    enabled: true
  # Avoid qualifying elements in selectors (also known as "tag-qualifying").
  QualifyingElement:
    enabled: false
    allow_element_with_attribute: false
    allow_element_with_class: false
    allow_element_with_id: false
  # Don't write selectors with a depth of applicability greater than 3.
  # https://smacss.com/book/applicability
  # Use NestingDepth (3 + 3 = 6)
  SelectorDepth:
    enabled: true
    max_depth: 3
  # It is good practice to choose a convention for naming selectors.
  SelectorFormat:
    enabled: true
    convention: hyphenated_lowercase # or 'strict_BEM', or 'hyphenated_BEM', or 'snake_case', or 'camel_case', or a regex pattern
  # Prefer the shortest shorthand form possible for properties that support it.
  Shorthand:
    enabled: false
    allowed_shorthands: [1, 2, 3]
  # Properties within rule sets should each reside on their own line.
  SingleLinePerProperty:
    enabled: true
    allow_single_line_rule_sets: true
  # Split selectors onto separate lines after each comma, and have each individual selector occupy a single line.
  SingleLinePerSelector:
    enabled: true
  # Commas in lists should be followed by a space.
  SpaceAfterComma:
    enabled: true
    style: one_space # or 'no_space', or 'at_least_one_space'
  # Properties should be formatted with a single space separating the colon from the property's value.
  SpaceAfterPropertyColon:
    enabled: true
    style: one_space # or 'no_space', or 'at_least_one_space', or 'aligned'
  # Properties should be formatted with no space between the name and the colon.
  SpaceAfterPropertyName:
    enabled: true
  # Variables should be formatted with no space between the name and the colon.
  SpaceAfterVariableName:
    enabled: true
  # Operators should be formatted with a single space on both sides of an infix operator. These include +, -, *, /, %, ==, !=, >, >=, <, and <=.
  SpaceAroundOperator:
    enabled: true
    style: one_space # or 'at_least_one_space', or 'no_space'
  # Opening braces should be preceded by a single space.
  SpaceBeforeBrace:
    enabled: true
    style: space # or 'new_line'
    allow_single_line_padding: false
  # Parentheses should not be padded with spaces.
  SpaceBetweenParens:
    enabled: true
    spaces: 0
  # String literals should be written with single quotes unless using double quotes would save on escape characters.
  StringQuotes:
    enabled: true
    style: single_quotes # or double_quotes
  # Property values; @extend, @include, and @import directives; and variable declarations should always end with a semicolon.
  TrailingSemicolon:
    enabled: true
  # Reports lines containing trailing whitespace.
  TrailingWhitespace:
    enabled: true
  # Don't write trailing zeros for numeric values with a decimal point.
  TrailingZero:
    enabled: false
  # Don't use the all keyword to specify transition properties.
  TransitionAll:
    enabled: false
  # Numeric values should not contain unnecessary fractional portions.
  UnnecessaryMantissa:
    enabled: false
  # Do not use parent selector references (&) when they would otherwise be unnecessary.
  UnnecessaryParentReference:
    enabled: true
  # URLs should not contain protocols or domain names.
  UrlFormat:
    enabled: false
  # URLs should always be enclosed within quotes.
  UrlQuotes:
    enabled: true
  # Properties, like color and font, are easier to read and maintain when defined using variables rather than literals.
  VariableForProperty:
    enabled: false
    properties:
    - color
    - font
    - font-size
  # Avoid vendor prefixes. That is, don't write them yourself. Instead, you can use Autoprefixer
  VendorPrefix:
    enabled: true
    identifier_list: base
    additional_identifiers: []
    excluded_identifiers: []
  # Omit length units on zero values.
  ZeroUnit:
    enabled: true
  # scss-lint includes a set of linters for codebases which use the Compass framework.
  # https://github.com/brigade/scss-lint/blob/master/lib/scss_lint/linter/compass/README.md
  Compass::*:
    enabled: false
